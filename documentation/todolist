-Future tasks-

quiz.html:
    -Consider finding a more efficient submit quiz function.

quiz.js:
    -Retrieve course, quizId, and studentId to fill variables.
    -Implement answer explanations after they have been added to the database.
    -Fix student quiz submission.
    -Add confirmation message on success.

quiz-add.html:
    -Add answer 1 explanation once they are in the database.
    -Add buttons for images on question 1 and its answers.


quiz-add.js:
    -Use login to check user permissions.
    -Add answer explanations once they are in the database.
    -Add validation so only complete answers are submitted to the database.
    -Add a remove question functionality.
    -Add confirmation message and redirect on successful submission.
    -Add funtionality to use images in questions and answers once those features are complete on the backend.

quiz-analytics.js:
    -Retrieve actual analytics and questions.
    -Fix text color inside question/answer cards.

user authentication
    - right now the user authentication/signup only kind of works. a person can sign up just fine,
    but when you go to login/authenticate the token the api sends back isn't actually useful.
    the api needs to check and validate tokens when requests are made to the api. right now the
    authentication works by checking if they api has sent back a token. if it did, authentication was successful
    thus, the client (javascript) creates a variable that stores the current unix epoch in local storage.
    when trying to access pages that require a logged in user, the client looks up the time that it stored earlier.
    if it doesn't exist or is more than 5 hours old (the time the real token lasts on the server), then the user will
    be forced to reauthenticate.