-Future tasks-

quiz.html:
    -Consider finding a more efficient submit quiz function.

quiz.js:
    -Retrieve course, quizId, and studentId to fill variables.
    -Implement answer explanations after they have been added to the database.
    -Fix student quiz submission.
    -Add confirmation message on success.

quiz-add.html:
    -Add answer 1 explanation once they are in the database.
    -Add buttons for images on question 1 and its answers.


quiz-add.js:
    -Use login to check user permissions.
    -Add answer explanations once they are in the database.
    -Add validation so only complete answers are submitted to the database.
    -Add a remove question functionality.
    -Add confirmation message and redirect on successful submission.
    -Add funtionality to use images in questions and answers once those features are complete on the backend.

quiz-analytics.js:
    -Retrieve actual analytics and questions.
    -Fix text color inside question/answer cards.

<<<<<<< HEAD
user authentication
    - right now the user authentication/signup only kind of works. a person can sign up just fine,
    but when you go to login/authenticate the token the api sends back isn't actually useful.
    the api needs to check and validate tokens when requests are made to the api. right now the
    authentication works by checking if they api has sent back a token. if it did, authentication was successful
    thus, the client (javascript) creates a variable that stores the current unix epoch in local storage.
    when trying to access pages that require a logged in user, the client looks up the time that it stored earlier.
    if it doesn't exist or is more than 5 hours old (the time the real token lasts on the server), then the user will
    be forced to reauthenticate.
=======
landingpages.html:
    create a landing page for both the student and the home when they log in. 
    This landing page should be linked to the 'home' page of the menu options.
    Perhaps add the user name and department/email. Quiz results for students and 
    quiz taken/archived/active for the professor. Try to make it so that the professor
    knows how each quiz is doing, is it successfull? Or are students struggling with it.
    for both the instructor and the student this kind of information needs to be pulled from the database.
    The figma shows an idea of how this can be done.

study-materials.html:
    -Add rescources students can use. This can include pdf's, videos, textbooks. Talk to adminstrator about what
    theyou would want on here
    -The style of it should remain as is each button should be labeled appropreatly to what it has in content. Such as "videos" or "pdf's".

manage-quizzes.html:
    -Add the list of quizzes each professor has and add a delete/edit/add button.
    figma shows what we had in mind for this.
    from this page the adminstrator should be able to make changes to current/old quizzes and add more quizzes.

quiz-results.html:
    -Pull records from database and compose a pie chart or some kind of visual representation of what quiz results are.
    -add an option to "hide" student names, make "anonymous"
    -Perhaps have reports of which question is being missed the most.

study-materails-admin:
    -Add/delete/new buttons for the adminstrator to edit the resources.


>>>>>>> 9f2fd83c4673b7e6ec7762a577f4c64d77043ea0
